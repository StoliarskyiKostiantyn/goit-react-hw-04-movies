{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/Navigation/Navigation.js","services/fetchMovies.js","Components/Pages/HomePage/HomePage.js","Components/SearchForm/SearchForm.js","Components/Pages/MoviesPage/MoviesPage.js","Components/Pages/NotFound/NotFound.js","Components/Pages/MoviesPage/Cast/Cast.js","Components/Pages/MoviesPage/Review/Review.js","Components/Pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.js","App.js","index.js"],"names":["module","exports","Navigation","exact","to","className","s","link","activeClassName","activeLink","API_KEY","a","fetch","response","ok","json","Promise","reject","Error","movieName","filmId","api","fetchMovie","fetchCast","fetchMovieByName","fetchMovieById","fetchReview","HomePage","useState","filmList","setFilmList","url","useRouteMatch","useEffect","then","data","results","map","item","undefined","name","id","title","SearchForm","onSubmit","type","placeholder","autoComplete","MoviesPage","filmName","setFilmName","filmListByName","setFilmListByName","console","log","evt","inputValue","target","value","preventDefault","trim","alert","film","NotFound","Cast","useParams","cast","setCast","cas","src","profile_path","width","Review","review","setReview","length","rev","author","author_details","avatar_path","content","MovieDetailsPage","setFilm","alt","poster_path","overview","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3c7cd78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3wyCh\",\"activeLink\":\"Navigation_activeLink__1rP44\"};","import { NavLink } from 'react-router-dom';\r\nimport s from '../Navigation/Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/movies\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","const API_KEY = '47608d5961c2a225a6bc2492b5fa7a6d';\r\nasync function fetchMovie() {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`,\r\n  );\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(`Нет покемона с именем`));\r\n}\r\nasync function fetchMovieByName(movieName) {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/keyword?api_key=${API_KEY}&query=${movieName}`,\r\n  );\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(`Нет такого фильма`));\r\n}\r\nasync function fetchMovieById(filmId) {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${filmId}?api_key=${API_KEY}`,\r\n  );\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(`Нет такого фильма`));\r\n}\r\nasync function fetchCast(filmId) {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=${API_KEY}`,\r\n  );\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(`Нет такого фильма`));\r\n}\r\nasync function fetchReview(filmId) {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${filmId}/reviews?api_key=${API_KEY}`,\r\n  );\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(`Нет такого фильма`));\r\n}\r\nconst api = {\r\n  fetchMovie,\r\n  fetchCast,\r\n  fetchMovieByName,\r\n  fetchMovieById,\r\n  fetchReview,\r\n};\r\n\r\nexport default api;\r\n","import { useState, useEffect } from 'react';\r\nimport api from '../../../services/fetchMovies';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nexport default function HomePage() {\r\n  const [filmList, setFilmList] = useState([]);\r\n  const { url } = useRouteMatch();\r\n  useEffect(() => {\r\n    if (filmList !== []) {\r\n      api\r\n        .fetchMovie()\r\n        .then(data => setFilmList(data.results));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>HOMEPAGE</h1>\r\n      <ul>\r\n        {filmList.map(item => {\r\n          if (item.name !== undefined) {\r\n            return (\r\n              <li key={item.id}>\r\n                <Link to={`${url}/${item.id}`}>\r\n                  {item.name}\r\n                </Link>\r\n              </li>\r\n            );\r\n          } else {\r\n            return (\r\n              <li key={item.id}>\r\n                <Link to={`/movies/${item.id}`}>\r\n                  {item.title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          }\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function SearchForm({ onSubmit }) {\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} name=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"serch\"\r\n          placeholder=\"Введите название фильма\"\r\n          title=\"Ведите название фильма\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import SearchForm from '../../SearchForm/SearchForm';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../../../services/fetchMovies';\r\nexport default function MoviesPage() {\r\n  const [filmName, setFilmName] = useState('');\r\n  const [filmListByName, setFilmListByName] = useState([]);\r\n  const { url } = useRouteMatch();\r\n  useEffect(() => {\r\n    if (filmName === '') {\r\n      return;\r\n    } else {\r\n      console.log('effext');\r\n      if (filmName !== '') {\r\n        api\r\n          .fetchMovieByName(filmName)\r\n          .then(data => setFilmListByName(data.results));\r\n        console.log(filmName);\r\n      }\r\n    }\r\n  }, [filmName]);\r\n  const handleSubmit = evt => {\r\n    const inputValue = evt.target[0].value;\r\n    evt.preventDefault();\r\n    if (inputValue.trim() === '') {\r\n      alert('Введите ключевое слово для поиска фильма');\r\n      return;\r\n    }\r\n    setFilmName(inputValue);\r\n    evt.target[0].value = '';\r\n  };\r\n  return (\r\n    <>\r\n      <h1>MoviesPage</h1>\r\n      <SearchForm onSubmit={handleSubmit} />\r\n      <ul>\r\n        {filmListByName &&\r\n          filmListByName.map(film => (\r\n            <li key={film.id}>\r\n              <Link to={`${url}/${film.id}`}>\r\n                {film.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function NotFound() {\r\n  return (\r\n    <>\r\n      <h1>404 Not Found</h1>\r\n    </>\r\n  );\r\n}\r\n","import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../../../../services/fetchMovies';\r\nexport default function Cast() {\r\n  const { filmId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n  useEffect(() => {\r\n    api.fetchCast(filmId).then(data => setCast(data.cast));\r\n  }, []);\r\n  console.log(cast);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {cast &&\r\n          cast.map(cas => {\r\n            return (\r\n              <li key={cas.id}>\r\n                <p>{cas.name}</p>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${cas.profile_path}`}\r\n                  width=\"100\"\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../../../../services/fetchMovies';\r\nexport default function Review() {\r\n  const { filmId } = useParams();\r\n  const [review, setReview] = useState([]);\r\n  useEffect(() => {\r\n    api\r\n      .fetchReview(filmId)\r\n      .then(data => setReview(data.results));\r\n  }, []);\r\n  console.log(review);\r\n  if (review.length === 0) {\r\n    return <p>There no reviews</p>;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {review.map(rev => {\r\n          return (\r\n            <li key={rev.id}>\r\n              <h4>{rev.author}</h4>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${rev.author_details.avatar_path}`}\r\n              />\r\n              <p>{rev.content}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport api from '../../../../services/fetchMovies';\r\nimport {\r\n  Link,\r\n  Route,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport Cast from '../Cast/Cast';\r\nimport Review from '../Review/Review';\r\nexport default function MovieDetailsPage() {\r\n  const { filmId } = useParams();\r\n  const [film, setFilm] = useState(null);\r\n  const { url } = useRouteMatch();\r\n  useEffect(() => {\r\n    api.fetchMovieById(filmId).then(setFilm);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <button>Go home</button>\r\n      {film && (\r\n        <>\r\n          <h1>{film.title}</h1>\r\n          <img\r\n            width=\"200\"\r\n            alt=\"Poster\"\r\n            src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\r\n          />\r\n          <p>{film.overview}</p>\r\n        </>\r\n      )}\r\n      <hr />\r\n      <Link to={`${url}/cast`}>Cast</Link>\r\n      <br />\r\n      <Link to={`${url}/review`}>Review</Link>\r\n      <Route path=\"/movies/:filmId/cast\">\r\n        <Cast filmId={filmId} />\r\n      </Route>\r\n      <Route path=\"/movies/:filmId/review\">\r\n        <Review filmId={filmId} />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n","import { Switch, Route } from 'react-router';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport HomePage from './Components/Pages/HomePage/HomePage';\nimport MoviesPage from './Components/Pages/MoviesPage/MoviesPage';\nimport NotFound from './Components/Pages/NotFound/NotFound';\nimport MovieDetailsPage from './Components/Pages/MoviesPage/MovieDetailsPage/MovieDetailsPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Navigation />\n      </header>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/movies\">\n          <MoviesPage />\n        </Route>\n        <Route path=\"/movies/:filmId\">\n          <MovieDetailsPage />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}